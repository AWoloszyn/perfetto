// Autogenerated by:
// ../../tools/ftrace_proto_gen/ftrace_proto_gen.cc
// Do not edit.

syntax = "proto2";
option optimize_for = LITE_RUNTIME;
package perfetto.protos;

message AmdgpuMmRregFtraceEvent {
  optional uint32 did = 1;
  optional uint32 reg = 2;
  optional uint32 value = 3;
}
message AmdgpuMmWregFtraceEvent {
  optional uint32 did = 1;
  optional uint32 reg = 2;
  optional uint32 value = 3;
}
message AmdgpuIvFtraceEvent {
  optional uint32 client_id = 1;
  optional uint32 pas_id = 2;
  optional uint32 ring_id = 3;
  optional uint32 src_id = 4;
  optional uint64 timestamp = 5;
  optional uint32 timestamp_src = 6;
  optional uint32 vmid = 7;
  optional uint32 vmid_src = 8;
}
message AmdgpuBoCreateFtraceEvent {
  optional uint32 allow = 1;
  optional uint64 bo = 2;
  optional uint32 pages = 3;
  optional uint32 prefer = 4;
  optional uint32 type = 5;
  optional uint32 visible = 6;
}
message AmdgpuCsFtraceEvent {
  optional uint64 bo_list = 1;
  optional uint32 dw = 2;
  optional uint32 fences = 3;
  optional uint32 ring = 4;
}
message AmdgpuCsIoctlFtraceEvent {
  optional uint32 context = 1;
  optional uint64 dma_fence = 2;
  optional uint32 num_ibs = 3;
  optional string ring_name = 4;
  optional uint64 sched_job_id = 5;
  optional uint32 seqno = 6;
  optional string timeline = 7;
}
message AmdgpuSchedRunJobFtraceEvent {
  optional uint32 context = 1;
  optional uint32 num_ibs = 2;
  optional string ring_name = 3;
  optional uint64 sched_job_id = 4;
  optional uint32 seqno = 5;
  optional string timeline = 6;
}
message AmdgpuVmGrabIdFtraceEvent {
  optional uint32 needs_flush = 1;
  optional uint64 pd_addr = 2;
  optional uint32 ring = 3;
  optional uint64 vm = 4;
  optional uint32 vm_hub = 5;
  optional uint32 vmid = 6;
}
message AmdgpuVmBoMapFtraceEvent {
  optional uint64 bo = 1;
  optional uint64 flags = 2;
  optional int64 last = 3;
  optional uint64 offset = 4;
  optional int64 start = 5;
}
message AmdgpuVmBoUnmapFtraceEvent {
  optional uint64 bo = 1;
  optional uint64 flags = 2;
  optional int64 last = 3;
  optional uint64 offset = 4;
  optional int64 start = 5;
}
message AmdgpuVmBoUpdateFtraceEvent {
  optional uint64 eoffset = 1;
  optional uint64 flags = 2;
  optional uint64 soffset = 3;
}
message AmdgpuVmBoMappingFtraceEvent {
  optional uint64 eoffset = 1;
  optional uint64 flags = 2;
  optional uint64 soffset = 3;
}
message AmdgpuVmSetPtesFtraceEvent {
  optional uint64 addr = 1;
  optional uint32 count = 2;
  optional uint64 flags = 3;
  optional uint32 incr = 4;
  optional uint64 pe = 5;
}
message AmdgpuVmCopyPtesFtraceEvent {
  optional uint32 count = 1;
  optional uint64 pe = 2;
  optional uint64 src = 3;
}
message AmdgpuVmFlushFtraceEvent {
  optional uint64 pd_addr = 1;
  optional uint32 ring = 2;
  optional uint32 vm_hub = 3;
  optional uint32 vmid = 4;
}
message AmdgpuBoListSetFtraceEvent {
  optional uint64 bo = 1;
  optional uint64 bo_size = 2;
  optional uint64 list = 3;
}
message AmdgpuCsBoStatusFtraceEvent {
  optional uint64 total_bo = 1;
  optional uint64 total_size = 2;
}
message AmdgpuTtmBoMoveFtraceEvent {
  optional uint64 bo = 1;
  optional uint64 bo_size = 2;
  optional uint32 new_placement = 3;
  optional uint32 old_placement = 4;
}
